/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WinesIndexRouteImport } from './routes/wines/index'
import { Route as WinesSearchRouteImport } from './routes/wines/search'
import { Route as WinesAddRouteImport } from './routes/wines/add'
import { Route as WinesIdRouteImport } from './routes/wines/$id'
import { Route as EditWineIdRouteImport } from './routes/edit-wine/$id'

const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WinesIndexRoute = WinesIndexRouteImport.update({
  id: '/wines/',
  path: '/wines/',
  getParentRoute: () => rootRouteImport,
} as any)
const WinesSearchRoute = WinesSearchRouteImport.update({
  id: '/wines/search',
  path: '/wines/search',
  getParentRoute: () => rootRouteImport,
} as any)
const WinesAddRoute = WinesAddRouteImport.update({
  id: '/wines/add',
  path: '/wines/add',
  getParentRoute: () => rootRouteImport,
} as any)
const WinesIdRoute = WinesIdRouteImport.update({
  id: '/wines/$id',
  path: '/wines/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const EditWineIdRoute = EditWineIdRouteImport.update({
  id: '/edit-wine/$id',
  path: '/edit-wine/$id',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/edit-wine/$id': typeof EditWineIdRoute
  '/wines/$id': typeof WinesIdRoute
  '/wines/add': typeof WinesAddRoute
  '/wines/search': typeof WinesSearchRoute
  '/wines': typeof WinesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/edit-wine/$id': typeof EditWineIdRoute
  '/wines/$id': typeof WinesIdRoute
  '/wines/add': typeof WinesAddRoute
  '/wines/search': typeof WinesSearchRoute
  '/wines': typeof WinesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/edit-wine/$id': typeof EditWineIdRoute
  '/wines/$id': typeof WinesIdRoute
  '/wines/add': typeof WinesAddRoute
  '/wines/search': typeof WinesSearchRoute
  '/wines/': typeof WinesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/edit-wine/$id'
    | '/wines/$id'
    | '/wines/add'
    | '/wines/search'
    | '/wines'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/edit-wine/$id'
    | '/wines/$id'
    | '/wines/add'
    | '/wines/search'
    | '/wines'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/register'
    | '/edit-wine/$id'
    | '/wines/$id'
    | '/wines/add'
    | '/wines/search'
    | '/wines/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  EditWineIdRoute: typeof EditWineIdRoute
  WinesIdRoute: typeof WinesIdRoute
  WinesAddRoute: typeof WinesAddRoute
  WinesSearchRoute: typeof WinesSearchRoute
  WinesIndexRoute: typeof WinesIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wines/': {
      id: '/wines/'
      path: '/wines'
      fullPath: '/wines'
      preLoaderRoute: typeof WinesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wines/search': {
      id: '/wines/search'
      path: '/wines/search'
      fullPath: '/wines/search'
      preLoaderRoute: typeof WinesSearchRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wines/add': {
      id: '/wines/add'
      path: '/wines/add'
      fullPath: '/wines/add'
      preLoaderRoute: typeof WinesAddRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wines/$id': {
      id: '/wines/$id'
      path: '/wines/$id'
      fullPath: '/wines/$id'
      preLoaderRoute: typeof WinesIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/edit-wine/$id': {
      id: '/edit-wine/$id'
      path: '/edit-wine/$id'
      fullPath: '/edit-wine/$id'
      preLoaderRoute: typeof EditWineIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  EditWineIdRoute: EditWineIdRoute,
  WinesIdRoute: WinesIdRoute,
  WinesAddRoute: WinesAddRoute,
  WinesSearchRoute: WinesSearchRoute,
  WinesIndexRoute: WinesIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
